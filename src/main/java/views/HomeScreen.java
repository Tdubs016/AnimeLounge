/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;


import io.socket.client.IO;
import io.socket.client.Socket;
import io.socket.emitter.Emitter;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import org.json.JSONArray;
import org.json.JSONObject;
/**
 *
 * @author Typan
 */
public class HomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form HomeScreen
     */
    private Socket s;
    private String username;
    private static String currentRoom = "main";
    
    
    
    
    public HomeScreen(String u) {
        initComponents();
        this.username = u;
        usernametext.setText(u);
        room1.setText(currentRoom);
        try{
            
            s= IO.socket("http://localhost:3000");
            
            s.on("connect", new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                s.emit("createUser", username);
            }
            
            });
            
            s.on(Socket.EVENT_CONNECT, new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                chatStatus.setText("Online");
                chatStatus.setForeground(Color.green);
            }
            
            });
            s.on(Socket.EVENT_DISCONNECT, new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                chatStatus.setText("Offline");
                chatStatus.setForeground(Color.red);
            }
            
            });
           s.on("updateChat", new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                chatTxt.append(arg0[0].toString() + " : " + arg0[1].toString() + "\n");
                chatTxt.setCaretPosition(chatTxt.getDocument().getLength());
            }
            
            });
            s.on("clearUsers", new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                userList.removeAll();
                
            }
            });
            
            s.on("updateUsers", new Emitter.Listener(){
            @Override
            public void call(Object... arg0){
                userList.add(arg0[0].toString());
            }
           
                
                
                
            
            
            });
           
            
            s.open();
            
            
            
        }catch (Exception e){
        e.printStackTrace();
        
        }
    }
    
    
    
    
    
    
    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        room = new javax.swing.JLabel();
        joinBtn = new javax.swing.JButton();
        usernametext = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        room1 = new javax.swing.JLabel();
        chatStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatTxt = new javax.swing.JTextArea();
        sndTxt = new javax.swing.JTextField();
        sendbtn = new javax.swing.JButton();
        userList = new java.awt.List();
        jScrollPane2 = new javax.swing.JScrollPane();
        roomList = new javax.swing.JList<>();
        animeImg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rank = new javax.swing.JLabel();
        epCount = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        animetxt = new javax.swing.JTextArea();
        view = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        profile = new javax.swing.JMenu();
        chatrooms = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        room.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        room.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        joinBtn.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        joinBtn.setText("Join");
        joinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinBtnActionPerformed(evt);
            }
        });

        usernametext.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        usernametext.setText("jLabel1");
        usernametext.setAlignmentX(0.5F);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        room1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        room1.setText("jLabel1");

        chatStatus.setForeground(new java.awt.Color(200, 47, 47));
        chatStatus.setText("Offline");

        chatTxt.setEditable(false);
        chatTxt.setColumns(20);
        chatTxt.setRows(5);
        jScrollPane1.setViewportView(chatTxt);

        sndTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sndTxtKeyPressed(evt);
            }
        });

        sendbtn.setText("Send");
        sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbtnActionPerformed(evt);
            }
        });
        sendbtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendbtnKeyPressed(evt);
            }
        });

        roomList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "main ", "Hunter x Hunter", "One Piece", "Bleach", "Demon Slayer", "My Hero Academia", "Black Clover", "Naruto", "Chainsaw Man", "Mob Psycho 100", "Cowboy Bebop", "Death Note" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(roomList);

        animeImg.setIcon(new javax.swing.ImageIcon("C:\\Users\\Typan\\Downloads\\killuagon.jpg")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Username :");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Ranking:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Episodes:");

        rank.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        rank.setText("0");

        epCount.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        epCount.setText("0");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Synopsis");

        animetxt.setColumns(20);
        animetxt.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        animetxt.setLineWrap(true);
        animetxt.setRows(5);
        animetxt.setText("Welcome to Anime Lounge!!! Here you'll be able to talk with other people online about your favorite anime's and with that, whichever room you are in you will get how many episodes that anime has and you will get it's current ranking compared to other anime. So you can stay in this main lobby and talk or join one of the many rooms on the left side ");
        animetxt.setWrapStyleWord(true);
        jScrollPane4.setViewportView(animetxt);

        view.setText("View");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        profile.setText("Profile");
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });
        jMenuBar1.add(profile);

        chatrooms.setText("ChatRooms");
        jMenuBar1.add(chatrooms);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernametext))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(joinBtn)))
                        .addGap(43, 43, 43)
                        .addComponent(animeImg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rank))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(epCount))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                        .addComponent(sndTxt))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(room1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chatStatus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sendbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(room1)
                    .addComponent(chatStatus)
                    .addComponent(view))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(userList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sndTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernametext)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(joinBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(rank))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(epCount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(animeImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
      YourProfile profilewindow = new YourProfile(username);
      profilewindow.revalidate();
      profilewindow.setVisible(true);
      //s.close();
      //dispose();
    }//GEN-LAST:event_profileMouseClicked

    private void joinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinBtnActionPerformed
            chatTxt.setText("");
            String selected = roomList.getSelectedValue();
            changeRoom(selected);
            rank.setText("none");
            epCount.setText("none");
            animetxt.setText("Welcome to the main Room");
            changeData(selected);
           room1.setText(currentRoom);
            
    }//GEN-LAST:event_joinBtnActionPerformed

    private void sendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbtnActionPerformed
        s.emit("sendMessage", sndTxt.getText().trim() );
        sndTxt.setText("");
        sndTxt.grabFocus();
        
    }//GEN-LAST:event_sendbtnActionPerformed

    private void sendbtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendbtnKeyPressed
        
    }//GEN-LAST:event_sendbtnKeyPressed

    private void sndTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sndTxtKeyPressed
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
        sendbtn.doClick();
        }
    }//GEN-LAST:event_sndTxtKeyPressed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        String selected = userList.getSelectedItem();
        OtherUserProfile vp = new OtherUserProfile(selected);
        vp.setVisible(true);
    }//GEN-LAST:event_viewActionPerformed
    private void changeData(String animeName){
        animeName = animeName.replaceAll(" ", "%20");
         HttpClient client = HttpClient.newHttpClient();
       HttpRequest request = HttpRequest.newBuilder()
		.uri(URI.create("https://anime-db.p.rapidapi.com/anime?page=1&size=50&search="+animeName)) //Hunter%20x%20%20Hunter
		.header("X-RapidAPI-Key", "1d4360e526mshec9e8158c94f693p15083ajsnec44673525ec")
		.header("X-RapidAPI-Host", "anime-db.p.rapidapi.com")
		.method("GET", HttpRequest.BodyPublishers.noBody())
		.build();
        client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
                .thenApply(HttpResponse::body)
                .thenApply(HomeScreen::parse)//thenAccept(System.out::println)
                .join();
    
    
    }
    
    
    
    private void changeRoom(String room){
        if(room != currentRoom){
        s.emit("updateRooms", room);
        currentRoom = room;
        
        }                                                                                                      
    
    }
   
    
    
    public static String parse(String responseBody) {
        JSONObject obj = new JSONObject(responseBody); //{....}
        JSONArray data = obj.getJSONArray("data");//[.....]
        for(int i =0; i < data.length(); i++){
            
            String title = data.getJSONObject(i).getString("title");
            int ranking = data.getJSONObject(i).getInt("ranking");
            String imgUrl = data.getJSONObject(i).getString("image");
            int episodes = data.getJSONObject(i).getInt("episodes");
            String synopsis = data.getJSONObject(i).getString("synopsis");
            
            JSONArray altTitles = data.getJSONObject(i).getJSONArray("alternativeTitles");
            for(int j =0; j < altTitles.length(); j++){
                String altTitle = altTitles.getString(j);//getJSONObject(j).getString(j+":");
             
                if(altTitle == null ? currentRoom == null : altTitle.equals(currentRoom)){
                    try{
                    URL url = new URL(imgUrl);
                    BufferedImage c = ImageIO.read(url);
                    ImageIcon image = new ImageIcon(c);
                    animeImg.setIcon(image);
                    }catch(Exception e){
                    
                    
                    }
                    rank.setText(""+ranking);
                    epCount.setText(""+episodes);
                    animetxt.setText(synopsis);
                    
                    
                    System.out.println(title +" Ranked : #"+ ranking);
                    return null;
                }
            }
                
                
            
        }
        return null;
    }
    
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel animeImg;
    private static javax.swing.JTextArea animetxt;
    private javax.swing.JLabel chatStatus;
    private javax.swing.JTextArea chatTxt;
    private javax.swing.JMenu chatrooms;
    private static javax.swing.JLabel epCount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton joinBtn;
    private javax.swing.JMenu profile;
    private static javax.swing.JLabel rank;
    private javax.swing.JLabel room;
    private javax.swing.JLabel room1;
    private javax.swing.JList<String> roomList;
    private javax.swing.JButton sendbtn;
    private javax.swing.JTextField sndTxt;
    private java.awt.List userList;
    private javax.swing.JLabel usernametext;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
